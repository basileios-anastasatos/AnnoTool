#! /bin/bash
# vim:ts=4:sts=4:sw=4:tw=80:expandtab

function process() {
    echo "MODE ${1:?}";
    if file "${2:?}" |
       grep -q ': gzip compressed data'; then
        zcat "${2:?}";
    else
        cat "${2:?}";
    fi |
    sed -e 's@, \([-0-9]\)@,\1@g' \
        -e 's@ @\n@g';
}

readonly DIR=$(dirname "${0:?}");

readonly PREFIX="/tmp/RPC_${USER:?}";

function usage() {
    readonly local EXIT_CODE="${1:-0}";
    echo -n -e "${2:+${2:?}\n\n}" > /dev/stderr;

    cat > /dev/stderr <<-EOF
	Usage: $0 arguments

	REQUIRED ARGUMENTS:
	 -g <ground_truth.idl[.gz]>
	 -d <detection.idl[.gz]>

	OPTIONAL ARGUMENTS:             DEFAULT
	 -t <true_positives.idl[.gz]>   generated by doRPC.py
	 -f <false_positives.idl[.gz]>  generated by doRPC.py
	 -m <missing_recall.idl[.gz]>   generated by doRPC.py
	 -o <output.atp>                <detection.atp>
	 -s <number of score classes>   1

	 Either all or none of the -t, -f, and -m flags must be provided.

	COLOURS:
	 [0;34mblue  [0m ground truth
	 [0;32mgreen [0m true positive
	 [0;31mred   [0m false positive
	 [0;33myellow[0m missing recall

	HELP:
	 -h
	EOF

    exit ${EXIT_CODE:?};
}

USE_DORPC=yes;
while getopts ":hg:d:t:f:m:o:s:" OPTION; do
    case "${OPTION:?}" in
        h) usage;;
        g) GROUND_TRUTH="${OPTARG:?}";;
        d) DETECTION="${OPTARG:?}";;
        t) TRUE_POSITIVES="${OPTARG:?}";  USE_DORPC=no;;
        f) FALSE_POSITIVES="${OPTARG:?}"; USE_DORPC=no;;
        m) MISSING_RECALL="${OPTARG:?}";  USE_DORPC=no;;
        o) ATP="${OPTARG:?}";;
        s) NSCORE_CLASSES="${OPTARG:?}";;
        ?) usage 1 "Fatal: unrecognized argument ${OPTARG:?}";;
    esac;
done;

[ "${GROUND_TRUTH}" ] ||
usage 2 "Fatal: no ground truth file given";

[ "${DETECTION}" ] ||
usage 2 "Fatal: no detection file given";

[ "${ATP}" ] ||
ATP=${DETECTION%.*}.atp;

[ "${NSCORE_CLASSES}" ] ||
NSCORE_CLASSES=1;

grep -q '^+\?[1-9][0-9]*$' <<<"${NSCORE_CLASSES:?}" ||
usage 3 "Fatal: the number of score classes must be a positive decimal integer";

if [ "${USE_DORPC:?}" = yes ]; then
    TRUE_POSITIVES="${PREFIX:?}-truePositives.idl.gz";
    FALSE_POSITIVES="${PREFIX:?}-falsePositives.idl.gz";
    MISSING_RECALL="${PREFIX:?}-missingRecall.idl.gz";

    doRPC.py "${GROUND_TRUTH:?}" \
             "${DETECTION:?}" \
             -a "${PREFIX:?}";
else
    [ "${TRUE_POSITIVES}" ]  || usage 4 "Fatal: no true positives file given";
    [ "${FALSE_POSITIVES}" ] || usage 4 "Fatal: no false positives file given";
    [ "${MISSING_RECALL}" ]  || usage 4 "Fatal: no missing recall file given";

fi;

for ff in "${GROUND_TRUTH:?}"    \
          "${DETECTION:?}"       \
          "${TRUE_POSITIVES:?}"  \
          "${FALSE_POSITIVES:?}" \
          "${MISSING_RECALL:?}"; do
    [ -f "${ff:?}" ]  ||
    usage 5 "Fatal: file ${ff:?} does not exist";
done;

readonly ATP_DIR=$(dirname "${ATP:?}");
readonly ATC="${ATP_DIR:?}/classes.atc";
readonly ANNOTATIONS_DIR="${ATP_DIR:?}/annotations";

mkdir -p "${ANNOTATIONS_DIR:?}" &&
{
    process G "${GROUND_TRUTH:?}";
    process D "${DETECTION:?}";
    process T "${TRUE_POSITIVES:?}";
    process F "${FALSE_POSITIVES:?}";
    process M "${MISSING_RECALL:?}";
} |
gawk -f "${DIR:?}/library.awk"                 \
     -f "${DIR:?}/xml_library.awk"             \
     -f "${DIR:?}/view_RPC.awk"                \
     -v "atp=${ATP:?}"                         \
     -v "atc=${ATP_DIR:?}/classes.atc"         \
     -v "annotations_dir=${ANNOTATIONS_DIR:?}" \
     -v "normal_width=4"                       \
     -v "selected_width=8"                     \
     -v "nscore_classes=${NSCORE_CLASSES:?}"   \
     -v "fill_alpha=0.1";
